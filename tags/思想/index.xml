<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>思想 on 赵鑫的博客</title>
    <link>http://zhaox.xyz/tags/%E6%80%9D%E6%83%B3/</link>
    <description>Recent content in 思想 on 赵鑫的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 09 Jun 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://zhaox.xyz/tags/%E6%80%9D%E6%83%B3/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>七个对我最重要的职业建议-译文</title>
      <link>http://zhaox.xyz/posts/2017-06-09-%E4%B8%83%E4%B8%AA%E5%AF%B9%E6%88%91%E6%9C%80%E9%87%8D%E8%A6%81%E7%9A%84%E8%81%8C%E4%B8%9A%E5%BB%BA%E8%AE%AE-%E8%AF%91%E6%96%87/</link>
      <pubDate>Fri, 09 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>http://zhaox.xyz/posts/2017-06-09-%E4%B8%83%E4%B8%AA%E5%AF%B9%E6%88%91%E6%9C%80%E9%87%8D%E8%A6%81%E7%9A%84%E8%81%8C%E4%B8%9A%E5%BB%BA%E8%AE%AE-%E8%AF%91%E6%96%87/</guid>
      <description>七个对我最重要的职业建议（译文） 作者： 阮一峰
日期： 2015 年 9 月 18 日
Nicholas C. Zakas 是全世界最著名的 JavaScript 程序员之一。
两年前，他写了一篇长文，回顾自己的职业生涯，提到七个对他来说最重要的建议。
我读完很受启发，决定做一点摘录。你可以先读下面的精简版，再去读全文。
七个对我最好的职业建议（精简版） 作者：Nicholas C. Zakas
译者：阮一峰
原文网址：https://www.nczonline.net/blog/2013/10/15/the-best-career-advice-ive-received/
一、不要别人点什么，就做什么 我的第一份工作，只干了 8 个月，那家公司就倒闭了。我问经理，接下来我该怎么办，他说：
 &amp;ldquo;小伙子，千万不要当一个被人点菜的厨师，别人点什么，你就烧什么。不要接受那样一份工作，别人下命令你该干什么，以及怎么干。你要去一个地方，那里的人肯定你对产品的想法，相信你的能力，放手让你去做。&amp;rdquo;
 我从此明白，单单实现一个产品是不够的，你还必须参与决定怎么实现。好的工程师并不仅仅服从命令，而且还给出反馈，帮助产品的拥有者改进它。
二、推销自己 我进入雅虎公司以后，经理有一天跟我谈话，他觉得我还做得不够。
 &amp;ldquo;你工作得很好，代码看上去不错，很少出 Bug。但是，问题是别人都没看到这一点。为了让其他人相信你，你必须首先让别人知道你做了什么。你需要推销自己，引起别人的注意。&amp;rdquo;
 我这才意识到，即使做出了很好的工作，别人都不知道，也没用。做一个角落里静静编码的工程师，并不可取。你的主管会支持你，但是他没法替你宣传。公司的其他人需要明白你的价值，最好的办法就是告诉别人你做了什么。一封简单的 Email：&amp;rdquo;嗨，我完成了 XXX，欢迎将你的想法告诉我&amp;rdquo;，就很管用。
三、学会带领团队 工作几年后，已经没人怀疑我的技术能力了，大家知道我能写出高质量的可靠代码。有一次，我问主管，怎么才能得到提升，他说：
 &amp;ldquo;当你的技术能力过关以后，就要考验你与他人相处的能力了。&amp;rdquo;
 于是，我看到了，自己缺乏的是领导能力，如何带领一个团队，有效地与其他人协同工作，取到更大的成果。
四、生活才是最重要的 有一段时间，我在雅虎公司很有挫折感，对公司的一些做法不认同，经常会对别人发火。我问一个同事，他怎么能对这种事情保持平静，他回答：
 &amp;ldquo;你要想通，这一切并不重要。有人提交了烂代码，网站下线了，又怎么样？工作并不是你的整个生活。它们不是真正的问题，只是工作上的问题。真正重要的事情都发生在工作以外。我回到家，家里人正在等我，这才重要啊。&amp;rdquo;
 从此，我就把工作和生活分开了，只把它当作&amp;rdquo;工作问题&amp;rdquo;看待。这样一来，我对工作就总能心平气和，与人交流也更顺利了。
五、自己找到道路 我被提升为主管以后，不知道该怎么做。我请教了上级，他回答：
 &amp;ldquo;以前都是我们告诉你做什么，从现在开始，你必须自己回答这个问题了，我期待你来告诉我，什么事情需要做。&amp;rdquo;
 很多工程师都没有完成这个转变，如果能够做到，可能就说明你成熟了，学会了取舍。你不可能把时间花在所有事情上面，必须找到一个重点。
六、把自己当成主人 我每天要开很多会，有些会议我根本无话可说。我对一个朋友说，我不知道自己为什么要参加这个会，也没有什么可以贡献，他说：
 &amp;ldquo;不要再去开这样的会了。你参加一个会，那是因为你参与了某件事。如果不确定自己为什么要在场，就停下来问。如果这件事不需要你，就离开。不要从头到尾都静静地参加一个会，要把自己当成负责人，大家会相信你的。&amp;rdquo;
 从那时起，我从没有一声不发地参加会议。我确保只参加那些需要我参加的会议。
七、找到水平更高的人 最后，让我从自己的经历出发，给我的读者一个建议。
 &amp;ldquo;找到那些比你水平更高、更聪明的人，尽量和他们在一起，吃饭或者喝咖啡，向他们讨教，了解他们拥有的知识。你的职业，甚至你的生活，都会因此变得更好。&amp;rdquo;</description>
    </item>
    
    <item>
      <title>软技能——代码之外的生存指南</title>
      <link>http://zhaox.xyz/posts/%E8%BD%AF%E6%8A%80%E8%83%BD%E4%BB%A3%E7%A0%81%E4%B9%8B%E5%A4%96%E7%9A%84%E7%94%9F%E5%AD%98%E6%8C%87%E5%8D%97/</link>
      <pubDate>Fri, 09 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>http://zhaox.xyz/posts/%E8%BD%AF%E6%8A%80%E8%83%BD%E4%BB%A3%E7%A0%81%E4%B9%8B%E5%A4%96%E7%9A%84%E7%94%9F%E5%AD%98%E6%8C%87%E5%8D%97/</guid>
      <description>这本书是在逛知乎的时候发现的，说的神乎其神的，也没多想就买了本，并在一个周六的下午看完了，读的过程倒是很轻松，速度也挺快，因为毕竟是一本励志书，多少有点“鸡汤”。总体来说，这本书可圈可点，有干货，也有“鸡汤”，主要分为职业、自我营销、学习、生产力、理财、健身、精神七大模块，不论是不是码农，取其精华来安利一下自己还是不错的！ 下面我就谈谈书中一些不错的干货，湿货就自己去慢慢看吧。
一、如何对待上班这件事情？ 把自己当做一个软件企业，把雇主当做企业的一个客户，你应当能够提供某种产品或者服务（把一个想法通过技术手段变成一个产品的能力），不断提升你的服务质量，专注于为某一类客户提供特定的服务，做好自我营销，为更多更优质的雇主服务。
二、如何注意人际关系？ 不是教你搞办公室政治，而是让你在这上面少踩坑。书中有句话比较经典：“一旦你贬低他人，削弱他们的成就感，在某种程度上就如同切断了他们的氧气补给，获得的回馈将完全是抓狂和绝望”。
 所以切记不要贬低他人，而是应该多激励
 学会聚精会神地聆听，并指出问题所在以及相关解决方案
 在小事情上放弃立场或承认错误有时候能为你赢得意想不到的尊重
  三、如何搞定面试？ 作者的观点并不新颖，但是的确这种方式最有效，同时也说明了其他方式的不靠谱！
 找人内推
 即便不换工作也要多面试增加面试经验
  四、技术做到什么程度？ 是一个方向钻到底，还是什么都搞？一门技术钻的越深，潜在的机会就会越少，但获得这些工作机会的可能性就越大。所以我觉得规划好自己的技术栈很有必要，总体来说一专多能可能会好一些。永远不要陷入对技术的狂热之中，只要明白不同的场景需要不同的技术方案解决就行！
五、如何晋升？  承担更多的责任
 做了事情要及时反馈给上面，上面不知道一切都是徒劳
 提升自己的技能
 不是提出问题，而是解决问题，相信一切问题都可以解决
  六、如何创业？ 要利用业余时间做起来，后期到一定阶段再辞职也不迟，不仅降低了风险，还提高了成功率。
创业要从小处着手，也就是朝着某个独角兽方向发展，比如国内的 Face++，就是只做人脸识别算法。
七、技术人员如何自我营销？  写博客
 社交媒体
 演讲、培训别人
 写书
  八、如何学习？  培养自学能力
 筛选出重点，快速突破
 动手实践才是王道
  九、如何管好自己？ 中国的教育模式导致我们基本上都是靠外部因素来左右我们的行为，很少有自我驱动型。良好的生活习惯是自律的有效保证，所以从现在开始让自己的生活变得井然有序，培养起自己的生活习惯！改掉坏习惯，培养好习惯，把大的目标转换为一个个小的计划！
十、时间去哪了？  看手机推送的所谓新闻（实际上都是毫无营养的标题党）
 看视频
 沉迷于刷社交软件
  十一、为何你总是逃避努力工作？ 努力工作——&amp;gt;辛苦——&amp;gt;有价值的东西——&amp;gt;带来的幸福感持久</description>
    </item>
    
  </channel>
</rss>