<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>opentracing on 赵鑫的博客</title>
    <link>http://zhaox.xyz/tags/opentracing/</link>
    <description>Recent content in opentracing on 赵鑫的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 09 Nov 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://zhaox.xyz/tags/opentracing/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Opentracing Zipkin</title>
      <link>http://zhaox.xyz/posts/2017-11-09-opentracing-zipkin/</link>
      <pubDate>Thu, 09 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>http://zhaox.xyz/posts/2017-11-09-opentracing-zipkin/</guid>
      <description>Zipkin是一个开源分布式的追踪系统 http://zipkin.io/，在微服务架构下，能够清晰的找出系统问题所在。它同时管理数据收集和数据查询。Zipkin的设计基于[Google Dagger](http://research.google.com/pubs/pub36356.html)论文
架构 查看您的平台是否已经在instrumentation, 查看列表existing instrumentations
示例流程 以下是User Code调用资源/foo的示例http跟踪序列，讲一个span在User Code收到http响应之后异步发送给zipkin
 ┌─────────────┐ ┌───────────────────────┐ ┌─────────────┐ ┌──────────────────┐ │ User Code │ │ Trace Instrumentation │ │ Http Client │ │ Zipkin Collector │ └─────────────┘ └───────────────────────┘ └─────────────┘ └──────────────────┘ │ │ │ │ ┌─────────┐ │ ──┤GET /foo ├─▶ │ ────┐ │ │ └─────────┘ │ record tags │ │ ◀───┘ │ │ ────┐ │ │ │ add trace headers │ │ ◀───┘ │ │ ────┐ │ │ │ record timestamp │ │ ◀───┘ │ │ ┌─────────────────┐ │ │ ──┤GET /foo ├─▶ │ │ │X-B3-TraceId: aa │ ────┐ │ │ │X-B3-SpanId: 6b │ │ │ │ └─────────────────┘ │ invoke │ │ │ │ request │ │ │ │ │ │ │ ┌────────┐ ◀───┘ │ │ ◀─────┤200 OK ├─────── │ │ ────┐ └────────┘ │ │ │ record duration │ │ ┌────────┐ ◀───┘ │ ◀──┤200 OK ├── │ │ │ └────────┘ ┌────────────────────────────────┐ │ │ ──┤ asynchronously report span ├────▶ │ │ │ │{ │ │ &amp;quot;traceId&amp;quot;: &amp;quot;aa&amp;quot;, │ │ &amp;quot;id&amp;quot;: &amp;quot;6b&amp;quot;, │ │ &amp;quot;name&amp;quot;: &amp;quot;get&amp;quot;, │ │ &amp;quot;timestamp&amp;quot;: 1483945573944000,│ │ &amp;quot;duration&amp;quot;: 386000, │ │ &amp;quot;annotations&amp;quot;: [ │ │--snip-- │ └────────────────────────────────┘  Transport instrumentation(装配库)发送的Span必须由装配的服务传输到Collector。有三种主要的传输类型：HTTP、Scribe和Kafka.</description>
    </item>
    
  </channel>
</rss>